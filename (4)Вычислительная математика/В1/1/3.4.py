import numpy as np

# 3.4.2.1 – «Режим автоматических вычислений» – достаточно импортировать NumPy
# 3.4.2.2 – Присваиваем переменной ORIGIN значение 1
ORIGIN = 1

# 3.4.2.3 – Вводим матрицу
A = np.array([
    [ 0.587,  0.189, -0.455],
    [ 0.189,  0.913,  0.208],
    [-0.455,  0.208,  0.500]
])

print("Матрица A (P):")
print(A, "\n")

# Для удобства вывода чисел
np.set_printoptions(precision=3, suppress=True)

# 3.4.2.4 и 3.4.2.5: Раскладка по первой строке (row=0).
#   Нам нужны 3 матрицы-миноры: M0, M1, M2 — 
#   это матрицы, которые получаются вычеркиванием строки 0 и столбца i.

def minor_matrix(A, row, col):
    """
    Возвращает подматрицу (минор), полученную
    вычеркиванием строки row и столбца col из A.
    """
    # np.delete(..., axis=0) вычёркивает указанную строку,
    # np.delete(..., axis=1) вычёркивает указанный столбец
    return np.delete(np.delete(A, row, axis=0), col, axis=1)

# Миноры при разложении по 0-й строке
M0 = minor_matrix(A, 0, 0)
M1 = minor_matrix(A, 0, 1)
M2 = minor_matrix(A, 0, 2)

print("Минор M0 (удаляем строку 0 и столбец 0):")
print(M0, "\n")

print("Минор M1 (удаляем строку 0 и столбец 1):")
print(M1, "\n")

print("Минор M2 (удаляем строку 0 и столбец 2):")
print(M2, "\n")

# 3.4.2.6: Вычислим определитель вручную (разложение по 0-й строке):
#   det(A) = A[0,0]*det(M0)*(-1)^(0+0)
#          - A[0,1]*det(M1)*(-1)^(0+1)
#          + A[0,2]*det(M2)*(-1)^(0+2)
#   Знак меняется согласно схеме + - +

detM0 = np.linalg.det(M0)
detM1 = np.linalg.det(M1)
detM2 = np.linalg.det(M2)

manual_det = (A[0,0] * detM0 * ((-1)**(0+0))
             - A[0,1] * detM1 * ((-1)**(0+1))
             + A[0,2] * detM2 * ((-1)**(0+2)))

print(f"det(M0) = {detM0:.4f}")
print(f"det(M1) = {detM1:.4f}")
print(f"det(M2) = {detM2:.4f}\n")

print(f"Определитель A, вычисленный вручную разложением по 1-й строке: {manual_det:.4f}")

# 3.4.2.7: Проверим встроенной функцией NumPy
detA = np.linalg.det(A)
print(f"Определитель A (через np.linalg.det): {detA:.4f}")

# Сравнение результатов
difference = abs(manual_det - detA)
print(f"\nРазница (ручной расчёт - linalg.det) = {difference:e}")
